// telegram.service.ts
import { Injectable } from '@nestjs/common';
import { Cron } from '@nestjs/schedule';
import * as TelegramBot from 'node-telegram-bot-api';

@Injectable()
export class TelegramService {
  private bot: TelegramBot;

  constructor() {
    this.bot = new TelegramBot(`${process.env.TELEGRAM}`, { polling: true });
  }

  async triggerBotTest() {
    const channelId = '@vyouztestad';
    const chat = await this.bot.getChat(channelId);
    if (chat?.id) {
      await this.bot.sendMessage(chat?.id, '\n ads topic  \n ads message ');
      return 'Message sent successfully!';
    } else {
      return 'Group not found!';
    }
  }

  sendAdToChannel(channelId: string, message: string) {
    // Generate shortened URL for the ad (using Bitly API or any URL shortening service)
    const shortenedUrl = '...'; // Shortened URL generated by the URL shortening service

    // // Send the shortened URL to the user via Telegram
    // this.sendTelegramMessage(shortenedUrl, userId);

    // // Track the click event
    // await this.clickTrackerService.trackClick(adId, userId);

    // channel = client.get_entity(channel_name)
    // print(f'ðŸ‘‰ Channel ID: {channel.id}')
    channelId = 'vyouztestad';
    this.bot.sendMessage(`@${channelId}`, message);
  }

  // @Cron('0 0 * * * *') // Run every hour
  @Cron('*/10 * * * * *') //ten seconds
  // @Cron('0 */1 * * * *') // minutes
  // @Cron('0 0 */12 * * *')  // 12 hours
  async sendPeriodicAd() {
    console.log('ejo');
  }

  // Implement logic to track views or clicks here
}

// anytime a new ad is suppose to be sent to a channel create unique short url
// anytime a redirect is triggered you just send..
